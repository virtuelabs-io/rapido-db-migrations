pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  branches:
    include:
    - master
    - feature/*
    - bug/*

variables:
  fargate: true
  imageName: 'rapido-db-migrations'
  major: 0
  minor: 0
  patch: 1

pr:
  branches:
    include:
    - master

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.6
    architecture: 'x64'

- script: |
    pip install setuptools
    pip install awscli
  displayName: 'Installing AWS CLI'

- task: NodeTool@0
  inputs:
    versionSpec: '8.x'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: install

- script: |
    echo "Due to enable tests"
  displayName: 'Running migration test'
  env:
    DB_USER: root
    DB_PASSWORD: admin
    HOST: localhost
    PORT: 3306

- script: |
    docker build -t $DOCKER_REPO/$(imageName):v$(major).$(minor).$(patch) .
  env:
    DOCKER_REPO: $(DOCKER_REPO)
  displayName: 'Build docker image and tag it'

- script: |
    eval $(aws ecr get-login --no-include-email --region eu-west-2)
    docker push $DOCKER_REPO/$(imageName):v$(major).$(minor).$(patch)
    docker tag $DOCKER_REPO/$(imageName):v$(major).$(minor).$(patch) $DOCKER_REPO/$(imageName):latest
    docker push $DOCKER_REPO/$(imageName):latest
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['fargate'], true))
  env:
    AWS_ACCESS_KEY_ID: $(PROD_AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(PROD_AWS_SECRET_ACCESS_KEY)
    DOCKER_REPO: $(DOCKER_REPO)
  displayName: 'Publish docker image to ECR'
